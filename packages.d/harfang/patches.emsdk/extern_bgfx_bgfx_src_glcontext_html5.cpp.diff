--- harfang-3.2.7/extern/bgfx/bgfx/src/glcontext_html5.cpp	2023-08-24 04:02:40.882621755 +0200
+++ harfang-wasm/extern/bgfx/bgfx/src/glcontext_html5.cpp	2023-08-23 04:28:19.733872437 +0200
@@ -2,7 +2,7 @@
  * Copyright 2011-2022 Branimir Karadzic. All rights reserved.
  * License: https://github.com/bkaradzic/bgfx/blob/master/LICENSE
  */
-
+#include <stdio.h>
 #include "bgfx_p.h"
 
 #if BGFX_CONFIG_RENDERER_OPENGLES
@@ -65,6 +65,7 @@
 
 	void GlContext::create(uint32_t _width, uint32_t _height)
 	{
+        puts("68 GlContext::create");
 		// assert?
 		if (m_primary != NULL)
 			return;
@@ -124,6 +125,19 @@
 
 	SwapChainGL* GlContext::createSwapChain(void* _nwh)
 	{
+		const char* canvas = (const char*) _nwh;
+        EMSCRIPTEN_WEBGL_CONTEXT_HANDLE context;
+        SwapChainGL* swapChain;
+
+        if ( (context = emscripten_webgl_get_current_context()) ) {
+
+            emscripten_webgl_make_context_current(context);
+			swapChain = BX_NEW(g_allocator, SwapChainGL)(context, canvas);
+			import(2);
+            printf("Re using WebGL context %i\n", context);
+			return swapChain;
+        }
+
 		emscripten_webgl_init_context_attributes(&s_attrs);
 
 		// Work around bug https://bugs.chromium.org/p/chromium/issues/detail?id=1045643 in Chrome
@@ -136,19 +150,19 @@
 		s_attrs.antialias                 = false;
 
 		s_attrs.minorVersion = 0;
-		const char* canvas = (const char*) _nwh;
 		int error = 0;
 
 		for (int version = 2; version >= 1; --version)
 		{
 			s_attrs.majorVersion = version;
-			EMSCRIPTEN_WEBGL_CONTEXT_HANDLE context = emscripten_webgl_create_context(canvas, &s_attrs);
+			//EMSCRIPTEN_WEBGL_CONTEXT_HANDLE
+            context = emscripten_webgl_create_context(canvas, &s_attrs);
 
 			if (context > 0)
 			{
 				EMSCRIPTEN_CHECK(emscripten_webgl_make_context_current(context) );
 
-				SwapChainGL* swapChain = BX_NEW(g_allocator, SwapChainGL)(context, canvas);
+				swapChain = BX_NEW(g_allocator, SwapChainGL)(context, canvas);
 
 				import(version);
 
